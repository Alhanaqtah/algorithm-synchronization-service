// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package mock_client is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"
	models "sync-algo/internal/models"

	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// AddClient mocks base method.
func (m *MockService) AddClient(ctx context.Context, clientInfo *models.Client) (*models.Client, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddClient", ctx, clientInfo)
	ret0, _ := ret[0].(*models.Client)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddClient indicates an expected call of AddClient.
func (mr *MockServiceMockRecorder) AddClient(ctx, clientInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddClient", reflect.TypeOf((*MockService)(nil).AddClient), ctx, clientInfo)
}

// DeleteClient mocks base method.
func (m *MockService) DeleteClient(ctx context.Context, clientID int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteClient", ctx, clientID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteClient indicates an expected call of DeleteClient.
func (mr *MockServiceMockRecorder) DeleteClient(ctx, clientID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteClient", reflect.TypeOf((*MockService)(nil).DeleteClient), ctx, clientID)
}

// UpdateClient mocks base method.
func (m *MockService) UpdateClient(ctx context.Context, clientInfo *models.Client) (*models.Client, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateClient", ctx, clientInfo)
	ret0, _ := ret[0].(*models.Client)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateClient indicates an expected call of UpdateClient.
func (mr *MockServiceMockRecorder) UpdateClient(ctx, clientInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateClient", reflect.TypeOf((*MockService)(nil).UpdateClient), ctx, clientInfo)
}
